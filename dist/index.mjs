var i=class{constructor(){this.interceptors=[]}use(e){return this.interceptors.push(e)}eject(e){e>=0&&e<this.interceptors.length&&this.interceptors.splice(e,1)}async apply(e){let t={...e};for(let r of this.interceptors)t=await r(t);return t}};var a=class{constructor(){this.interceptors=[]}use(e){return this.interceptors.push(e)}eject(e){e>=0&&e<this.interceptors.length&&this.interceptors.splice(e,1)}async apply(e){let t={...e};for(let r of this.interceptors)t=await r(t);return t}};function m(s,e){return e?s.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):s}function g(s,e){if(!e)return s;let t=Object.entries(e).filter(([d,u])=>u!=null).map(([d,u])=>`${encodeURIComponent(d)}=${encodeURIComponent(String(u))}`).join("&");if(!t)return s;let r=s.indexOf("#"),n=r===-1?s:s.slice(0,r),o=r===-1?"":s.slice(r),c=n.indexOf("?")===-1?"?":"&";return n+c+t+o}function R(s){return s.toLowerCase()}function f(s,e){return e&&Object.entries(e).forEach(([t,r])=>{s[R(t)]=r}),s}var p=class{constructor(e={}){this.config={baseURL:"",timeout:3e4,retries:3,cache:!0,...e},this.requestInterceptors=new i,this.responseInterceptors=new a}async get(e,t){return this.request({...t,method:"GET",url:e})}async post(e,t,r){return this.request({...r,method:"POST",url:e,data:t})}async put(e,t,r){return this.request({...r,method:"PUT",url:e,data:t})}async delete(e,t){return this.request({...t,method:"DELETE",url:e})}async patch(e,t,r){return this.request({...r,method:"PATCH",url:e,data:t})}async head(e,t){return this.request({...t,method:"HEAD",url:e})}async options(e,t){return this.request({...t,method:"OPTIONS",url:e})}async request(e){let t=await this.requestInterceptors.apply({...this.config,...e}),r=await this.makeRequest(t);return r=await this.responseInterceptors.apply(r),r}async makeRequest(e){let t=new AbortController,r=setTimeout(()=>t.abort(),e.timeout||this.config.timeout);try{let n=this.buildFullUrl(e),o=await fetch(n,{method:e.method,headers:this.buildHeaders(e),body:this.buildBody(e),signal:t.signal});return clearTimeout(r),{data:await this.parseResponse(o),status:o.status,statusText:o.statusText,headers:this.parseHeaders(o),config:e}}catch(n){throw clearTimeout(r),this.handleError(n)}}buildFullUrl(e){let t=e.url;return e.params&&(t=g(t,e.params)),this.config.baseURL&&(t=m(this.config.baseURL,t)),t}buildHeaders(e){return new Headers(f({"Content-Type":"application/json"},{...this.config.headers,...e.headers}))}buildBody(e){if(e.data)return JSON.stringify(e.data)}async parseResponse(e){let t=e.headers.get("content-type");return t!=null&&t.includes("application/json")?e.json():e.text()}parseHeaders(e){let t={};return e.headers.forEach((r,n)=>{t[n]=r}),t}handleError(e){if(e instanceof Error){let t=e;return e.name==="AbortError"&&(t.isTimeout=!0,t.message="Request timeout"),t}return new Error("Unknown error occurred")}};function l(s={}){return new p(s)}var I={createClient:l};export{l as createClient,I as default};
